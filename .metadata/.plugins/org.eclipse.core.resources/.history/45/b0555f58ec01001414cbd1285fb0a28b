package guiObjects;

import java.awt.Font;
import java.io.InputStream;

import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.lwjgl.opengl.GL11;
import org.newdawn.slick.Color;
import org.newdawn.slick.TrueTypeFont;
import org.newdawn.slick.util.ResourceLoader;
import wordHandler.*;
 
public class WordCube extends Sprite
{
	protected TrueTypeFont font;
	protected boolean antiAlias = true;
	protected String label = "potato";
	protected WordTag wordTagDisplay;
	protected int textSize = 12;
	protected float redLevel = 0;
	protected float blueLevel = 0;
	protected float greenLevel = 0;
	
	
	
	//int width = 0;
	//int height = 0;
	//int xPos = 100;
	//int yPos = 100;
	
	
	/**
	 * @return the textSize
	 */
	public int getTextSize() 
	{
		return textSize;
	}
	/**
	 * @param textSize the textSize to set
	 */
	public void setTextSize(int ntextSize) 
	{
		textSize = ntextSize;
	}
	public WordCube()
	{
		
	}
	public WordCube(String text)
	{
		label = text;
	}
	public void init() 
	{
		// load a default java font
		if( label == null )
			label = "null";
		Font awtFont = new Font("Times New Roman", Font.BOLD, textSize);
		font = new TrueTypeFont(awtFont, antiAlias);
		width = label.length()*6;
		height = 20;
		
		
	}
	public void setColor(float red, float blue, float green)
	{
		redLevel = red;
		blueLevel = blue;
		greenLevel = green;
	}
	
	public void render() 
	{
		Color.green.bind();
		GL11.glDisable(GL11.GL_TEXTURE_2D);
		//Color.white.bind();
		GL11.glColor3f(redLevel,blueLevel,greenLevel);
		GL11.glBegin(GL11.GL_QUADS);
		//GL11.glTexCoord2f(0,0);
		if(isClicked)
		{
			GL11.glVertex2f(xPos-5,yPos-5);
			//GL11.glTexCoord2f(1,0);
			GL11.glVertex2f(xPos+width+5,yPos-5);
			//GL11.glTexCoord2f(1,1);
			GL11.glVertex2f(xPos+width+5,yPos+height+5);
			//GL11.glTexCoord2f(0,1);
			GL11.glVertex2f(xPos-5,yPos+height+5);
		}
		else
		{
			GL11.glVertex2f(xPos,yPos);
			//GL11.glTexCoord2f(1,0);
			GL11.glVertex2f(xPos+width,yPos);
			//GL11.glTexCoord2f(1,1);
			GL11.glVertex2f(xPos+width,yPos+height);
			//GL11.glTexCoord2f(0,1);
			GL11.glVertex2f(xPos,yPos+height);
		}
		GL11.glEnd();
		GL11.glEnable(GL11.GL_TEXTURE_2D);
		if(isClicked)
		{
			font.drawString(xPos, yPos, label, new Color(redLevel,blueLevel,greenLevel));
		}
		else
		{
			font.drawString(xPos, yPos, label, Color.white);
		}
	    
		//System.out.println(yPos);
		//font2.drawString(100, 100, "NICE LOOKING FONTS!", Color.green);
	}
	public void setWordTagLink(WordTag displayTag)
	{
		wordTagDisplay = displayTag;
		setText(wordTagDisplay.getWord());
	}
	
	public void setText(String text)
	{
		label = text;
		width = label.length()*6;
		height = 20;
		
		//System.out.println(xPos+" "+yPos);
	}
	public void setTextToPos()
	{
		label = xPos+" "+yPos;
	}
	

}
